name: Docker Image CI

on:
  push:
    branches: [ "main" ]
    tags:
      - 'v*'
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest 
    permissions:
      contents: write

    steps:
    - name: Checkout code (fetch all tags)
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Node.js (v20.19.0 for Angular 20+)
      uses: actions/setup-node@v4
      with:
        node-version: 20.19.0

    - name: Install packages and build Angular
      run: |
        cd android-angular
        npm install
        npm run build

    - name: Configure git identity
      run: |
        git config --global user.email "actions@github.com"
        git config --global user.name "GitHub Actions"

    - name: Get version from package.json
      id: get_version
      run: |
        VERSION=$(node -p "require('./android-angular/package.json').version")
        echo "VERSION=$VERSION" >> $GITHUB_ENV
        echo "version=$VERSION" >> $GITHUB_OUTPUT

    - name: Generate unique tag
      id: generate_tag
      run: |
        BASE_VERSION=${{ steps.get_version.outputs.version }}
        TAG="v$BASE_VERSION"
        COUNT=0
        while git rev-parse "$TAG" >/dev/null 2>&1; do
          COUNT=$((COUNT + 1))
          TAG="v$BASE_VERSION.$COUNT"
        done
        echo "FINAL_TAG=$TAG" >> $GITHUB_ENV
        echo "final_tag=$TAG" >> $GITHUB_OUTPUT

    - name: Create and push unique tag
      run: |
        git tag -a ${{ env.FINAL_TAG }} -m "Auto-generated tag for version ${{ env.FINAL_TAG }}"
        git push origin ${{ env.FINAL_TAG }}

    - name: Install Cordova
      run: npm install -g cordova

    - name: Clean previous Cordova project if exists
      run: rm -rf androidtimp

    - name: Cordova project setup
      run: |
        cordova create androidtimp com.thinkrms.timp TIMP

    - name: Install dependencies for icon generation
      run: sudo apt-get update && sudo apt-get install -y imagemagick

    - name: Download logo and generate Android icons
      run: |
        mkdir -p androidtimp/res/android
        curl -o androidtimp/logo.png https://timp.thingsrms.com/assets/logo.png

        convert androidtimp/logo.png -resize 36x36 androidtimp/res/android/icon-36-ldpi.png
        convert androidtimp/logo.png -resize 48x48 androidtimp/res/android/icon-48-mdpi.png
        convert androidtimp/logo.png -resize 72x72 androidtimp/res/android/icon-72-hdpi.png
        convert androidtimp/logo.png -resize 72x72 androidtimp/res/android/icon-96-xhdpi.png
        convert androidtimp/logo.png -resize 72x72 androidtimp/res/android/icon-144-xxhdpi.png
        convert androidtimp/logo.png -resize 72x72 androidtimp/res/android/icon-192-xxxhdpi.png

    - name: Add icon references to config.xml
      run: |
        cd androidtimp
        sed -i '/<widget/a \
        <platform name="android">\n\
          <icon src="res/android/icon-36-ldpi.png" density="ldpi" />\n\
          <icon src="res/android/icon-48-mdpi.png" density="mdpi" />\n\
          <icon src="res/android/icon-72-hdpi.png" density="hdpi" />\n\
          <icon src="res/android/icon-96-xhdpi.png" density="xhdpi" />\n\
          <icon src="res/android/icon-144-xxhdpi.png" density="xxhdpi" />\n\
          <icon src="res/android/icon-192-xxxhdpi.png" density="xxxhdpi" />\n\
        </platform>' config.xml

    - name: Add Android platform to Cordova
      run: |
        cd androidtimp
        cordova platform add android@13.0.0

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: 17
        distribution: temurin

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3

    - name: Remove default Cordova www directory
      run: rm -rf androidtimp/www/

    - name: Copy Angular build to Cordova www
      run: |
        DIST_DIR=$(ls android-angular/dist)
        cp -r android-angular/dist/$DIST_DIR androidtimp/www

    - name: Build APK
      run: |
        cd androidtimp
        cordova build android

    - name: Upload Release APK
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ env.FINAL_TAG }}
        files: androidtimp/platforms/android/app/build/outputs/apk/debug/app-debug.apk
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

